---
fullname: Equivalence Not Congruence for Imp
shortname: coq-equivalence-not-congruence
organization: cdepillabout
community: false
action: true
nix: true
coqdoc: true

synopsis: Coq proof of an equivalence relation that is not congruent on the Imp language.

description: |-
  This project contains a Coq proof of an equivalence relation on the Imp
  language that is not congruent. This answers a question from the
  [Program Equivalence (Equiv)](https://softwarefoundations.cis.upenn.edu/plf-current/Equiv.html)
  chapter of
  [Programming Language Foundations](https://softwarefoundations.cis.upenn.edu/plf-current/index.html), which is the
  second book of [Software Foundations](https://softwarefoundations.cis.upenn.edu/).
  This proof is suggested in
  this [answer on the Computer Science StackExchange](https://cs.stackexchange.com/a/98873/130503).

authors:
- name: Dennis Gosnell
  initial: true

license:
  fullname: 'BSD 3-Clause "New" or "Revised" License'
  identifier: BSD-3-Clause

supported_coq_versions:
  text: 8.12 or later
  opam: '{ >= "8.12" }'

tested_coq_opam_versions:
- version: '8.12'

tested_coq_nix_versions:
- coq_version: '8.12'

documentation: |-
  ## Documentation

  ### Building

  If you're using Nix, you can get into a shell with Coq available by running
  `nix develop`:

  ```console
  $ nix develop
  ```

  You can build all the Coq files in this repo with `make`:

  ```console
  $ make
  ```

  After building, you can open up any of the files in
  [`theories/`](./theories/) in `coqide` in order to work through the proofs.

  You can regenerate the files in this repo (like `README.md`) from the
  [`meta.yml`](./meta.yml) file by cloning
  [`coq-community/templates`](https://github.com/coq-community/templates) and
  running `generate.sh`:

  ```console
  $ /some/path/to/coq-community/templates/generate.sh
  ```

  ### Overview

---

